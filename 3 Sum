// 3Sum leetcode
// find unique triplets adding upto 0

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        if(nums.size()<3) return {};
        
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;
        
        for(int i =0;i<nums.size()-1;i++){
            if(i>0 && nums[i]==nums[i-1]) continue;
            
            for(int b= i+1,e=nums.size()-1;b<e;){
                if(nums[i]+nums[b]+nums[e]==0){
                    ans.push_back({nums[i],nums[b],nums[e]});
                    while(b<e && nums[b]==nums[b+1])
                        b++;
                    while(b<e && nums[e]==nums[e-1])
                        e--;
                    
                    b++;e--;continue; 
                }
                if(nums[i]+nums[b]+nums[e]<0)
                    b++;
                else e--;
            }
        }

        return ans;
    }
};
